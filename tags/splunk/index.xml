<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Splunk on what did I learn today</title>
    <link>https://ridingintraffic.github.io/tags/splunk/</link>
    <description>Recent content in Splunk on what did I learn today</description>
    <image>
      <title>what did I learn today</title>
      <url>https://ridingintraffic.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://ridingintraffic.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 09 Nov 2018 08:08:50 -0400</lastBuildDate><atom:link href="https://ridingintraffic.github.io/tags/splunk/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Systemd-restarts-splunk-py</title>
      <link>https://ridingintraffic.github.io/posts/2018-11-09-systemd-restart-fail/</link>
      <pubDate>Fri, 09 Nov 2018 08:08:50 -0400</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2018-11-09-systemd-restart-fail/</guid>
      <description>Systemd restarting A while ago I had a service that would need to be restarted after it had a cool down of about 2 hours&amp;hellip; I had a stanza that stated
Restart=always RestartSec=7200 which was cool because it would just autorestart when it died. At the time the restart would work just fine after the cooldown. The catch that I ran in to was because of that timer, if I logged in and tried to start it when it was in a failed state, the service would hang.</description>
    </item>
    
    <item>
      <title>splunk-hec-python</title>
      <link>https://ridingintraffic.github.io/posts/2018-10-25-splunk-hec-python/</link>
      <pubDate>Thu, 25 Oct 2018 08:08:50 -0400</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2018-10-25-splunk-hec-python/</guid>
      <description>Splunk HTTP collector python script Hey the http collector is awesome so let use it in python to send things to stuff&amp;hellip; This is going to just take a dictionary as event data and then pass that to the http collector using only the request library . You will need to have a collector enabled for splunk and a token generated.
#!/usr/bin/env python import time import requests import urllib3 ##turns off the warning that is generated below because using self signed ssl cert urllib3.</description>
    </item>
    
    <item>
      <title>2017-03-06 git, splunk, lastpass-cli</title>
      <link>https://ridingintraffic.github.io/posts/2017-03-06-something-witty/</link>
      <pubDate>Mon, 06 Mar 2017 08:08:50 -0400</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2017-03-06-something-witty/</guid>
      <description>git Git should know better and totally commit and add files that I was working on last night. I left an uncommited file sitting on a laptop at my house when I went to work today&amp;hellip; Rookie mistake.
for ALL the repos
$ git config --global user.name &amp;#34;John Doe&amp;#34; $ git config --global user.email &amp;#34;john@doe.org&amp;#34; only for oen repo
$ git config user.name &amp;#34;John Doe&amp;#34; $ git config user.email &amp;#34;john@doe.org&amp;#34; git aliases are cool add to your .</description>
    </item>
    
    <item>
      <title>2017-02-27 nginx, splunk, docker, git</title>
      <link>https://ridingintraffic.github.io/posts/2017-02-27-mondays/</link>
      <pubDate>Mon, 27 Feb 2017 08:08:50 -0400</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2017-02-27-mondays/</guid>
      <description>Splunk and nginx Doing some splunkjs work from a docker container, and hosting it out of nginx, which means I needed to configure a proxy pass using some load balancing in order to access the splunk cluster, this was a little tricky because of session persistence and https. nginx load balancing Luckily there are some good pslunk blogs out there that help out configuring-nginx-with-splunk-rest-api-sdk-compatibility and some good reading about splunkjs read them both using-the-splunkjs-stack-part-1</description>
    </item>
    
  </channel>
</rss>
