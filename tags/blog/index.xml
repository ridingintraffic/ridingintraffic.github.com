<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>blog on what did I learn today</title>
    <link>https://ridingintraffic.github.io/tags/blog/</link>
    <description>Recent content in blog on what did I learn today</description>
    <image>
      <title>what did I learn today</title>
      <url>https://ridingintraffic.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://ridingintraffic.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 15 Dec 2023 00:00:00 -0500</lastBuildDate><atom:link href="https://ridingintraffic.github.io/tags/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>makefile list</title>
      <link>https://ridingintraffic.github.io/posts/2023-12-15-make_list/</link>
      <pubDate>Fri, 15 Dec 2023 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2023-12-15-make_list/</guid>
      <description>Working with make commands can be tiresome. Especially when those makefiles are really long and you do not know what commands are in them or you cannot remember what the commands are named.
Here is a neat little trick to help with that.
make list
&amp;lt;Makefile&amp;gt; test: echo &amp;#34;testing&amp;#34; build: echo &amp;#34;building&amp;#34; deploy: echo &amp;#34;deploying&amp;#34; list: @grep &amp;#39;^[^#[:space:]].*:&amp;#39; Makefile | sort just add the extra list command to a makefile like this</description>
    </item>
    
    <item>
      <title>tracing redirects</title>
      <link>https://ridingintraffic.github.io/posts/2023-12-15-follow-redirects/</link>
      <pubDate>Fri, 15 Dec 2023 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2023-12-15-follow-redirects/</guid>
      <description>Follow the redirect road Sometimes you want to have a curl command that traces the redirects and lets you see hops that it makes along the way
long story short do this
curl -sLD - http://test.chrislatta.org/myredirect.html -o /dev/null it will look like this
$ curl -sLD - http://test.chrislatta.org/myredirect.html -o /dev/null HTTP/1.1 301 Moved Permanently Content-Type: text/html; charset=iso-8859-1 Content-Length: 244 Connection: keep-alive Location: http://test.chrislatta.org/hop1.html HTTP/1.1 301 Moved Permanently Content-Type: text/html; charset=iso-8859-1 Content-Length: 244 Connection: keep-alive Location: http://test.</description>
    </item>
    
    <item>
      <title>keyboard-mounts</title>
      <link>https://ridingintraffic.github.io/posts/2023-10-27-keyboad_mounts/</link>
      <pubDate>Fri, 27 Oct 2023 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2023-10-27-keyboad_mounts/</guid>
      <description>keyboard mounts this is the easiest cleanest and cheapest way I have found to mount a split keyboard.
the sticker that you apply to the keyboard case has adhesive and can be bought in a multi pack
these are great because they are pretty cheap and their height is less that your standard silicon bumpon, therefore you can have the bumpons for feet and they will sit nicely on any flat surface when not mounted</description>
    </item>
    
    <item>
      <title>tfstate-migration</title>
      <link>https://ridingintraffic.github.io/posts/2023-09-15-tfstate-migration/</link>
      <pubDate>Fri, 15 Sep 2023 16:52:54 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2023-09-15-tfstate-migration/</guid>
      <description>It turns out that if you were using terraform.io as a remote state only situation, hashicorp is upping the price to a price per resource model and making things really expensive. It is now time to migrate from tf.io to s3 and not pay a ton of money..
BLADE And never again have to pay for a service that would be dirt cheap... RAZOR ...IF it weren&amp;#39;t run by a bunch of profiteering gluttons!</description>
    </item>
    
    <item>
      <title>2023-08-24-minimodem</title>
      <link>https://ridingintraffic.github.io/posts/2023-08-24-minimodem/</link>
      <pubDate>Thu, 24 Aug 2023 17:09:09 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2023-08-24-minimodem/</guid>
      <description>adeventures in old technology so there is an application called minimodem and it will transmit and receive data at various bps etc. why not see what it takes to move a 1.5mb file. cause lol
base64 -i img.jpg|minimodem --tx 9600 --ascii -f 9600.wav ffmpeg -i 9600.wav 9600.mp3 ffmpeg -i 9600.mp3 9600.wav minimodem --rx 9600 -f 9600.wav|base64 -d &amp;gt;img_output9600.png at 9600 bps the file is 36 minutes long. and 120mb once in mp3 its 17mb.</description>
    </item>
    
    <item>
      <title>terraform targeting</title>
      <link>https://ridingintraffic.github.io/posts/2023-08-18-terraform_targeting/</link>
      <pubDate>Fri, 18 Aug 2023 16:54:04 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2023-08-18-terraform_targeting/</guid>
      <description>terraform targeting https://github.com/ridingintraffic/ridingintraffic.github.com/wiki/code_sre#terraform-targetingd Yes you are supposed to never use a targeted plan and apply in terraform becuase it is the violation of the Infra as code creed. But you know what sometimes you just gotta do a thing and get it done. Then you never want to remember your shame and as a result you go and forget how to do that thing. so here it is
terraform plan -target=&amp;#34;aws_appautoscaling_scheduled_action.</description>
    </item>
    
    <item>
      <title>gitlab exit codes aws arm building</title>
      <link>https://ridingintraffic.github.io/posts/2023-08-17-gitlab_exit_codes_aws_arm_building/</link>
      <pubDate>Thu, 17 Aug 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2023-08-17-gitlab_exit_codes_aws_arm_building/</guid>
      <description>gitlab and exit codes Sometimes gitlab will have a command or a script that runs and it will not trap an exit code properly.
This results in an error condition happening in a script, but the job in the pipeline to come back green.
here is some meat and context around the issue as well. https://gitlab.com/gitlab-org/gitlab-runner/-/issues/25394 and then a bit more here https://gitlab.com/gitlab-org/gitlab/-/merge_requests/77601 and then of course it still isn&amp;rsquo;t fixed as of today&amp;rsquo;s writing https://gitlab.</description>
    </item>
    
    <item>
      <title>boost audio on video file</title>
      <link>https://ridingintraffic.github.io/posts/2023-08-14-audio_boost/</link>
      <pubDate>Mon, 14 Aug 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2023-08-14-audio_boost/</guid>
      <description>Was the audio too quiet on something that you recorded?
Are you lazy and you don&amp;rsquo;t want to drop in the file to a timeline editor just so you can gain boost?
most laptops will have ffmpeg on them, and if your mac doesnt then a simple brew install ffmpeg https://formulae.brew.sh/formula/ffmpeg
ffmpeg -i &amp;#34;your_input_file.mp4&amp;#34; -vcodec copy -filter:a &amp;#34;volume=15dB&amp;#34; &amp;#34;your_output_file.mp4&amp;#34; there you have it short and simple now your video file is louder.</description>
    </item>
    
    <item>
      <title>improvisation as a way of life</title>
      <link>https://ridingintraffic.github.io/posts/2023-08-13-improvisation/</link>
      <pubDate>Mon, 14 Aug 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2023-08-13-improvisation/</guid>
      <description>I am a leaf on the wind, watch how I soar. this is an old post from 2018 that I never added here but I thought it was still relevant today - Roll with the punches, go with the flow, make it up as you go… People always say that you should stay flexible with your plans. Don’t be afraid to change things. Never in my wildest dreams would I fully understand what it means to live a life of constant improvisation than when we had our first child.</description>
    </item>
    
  </channel>
</rss>
