<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>daily on what did I learn today</title>
    <link>https://ridingintraffic.github.io/categories/daily/</link>
    <description>Recent content in daily on what did I learn today</description>
    <image>
      <url>https://ridingintraffic.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://ridingintraffic.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 23 May 2023 00:00:00 -0500</lastBuildDate><atom:link href="https://ridingintraffic.github.io/categories/daily/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>python base64 requests jq and terraform</title>
      <link>https://ridingintraffic.github.io/posts/2023-05-23-jq-terraform-python-requests/</link>
      <pubDate>Tue, 23 May 2023 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2023-05-23-jq-terraform-python-requests/</guid>
      <description>base64 user auth in requests use the base64 for the first header and then reuse the bearer token that you get back.
import requests import json from requests.auth import HTTPBasicAuth headers = { &amp;#39;Content-Type&amp;#39;: &amp;#39;application/json&amp;#39;, &amp;#39;Accept&amp;#39;: &amp;#39;application/json&amp;#39; } base_url = &amp;#39;https://www.something.com&amp;#39; token_url = &amp;#34;/tauth/1.0/token/&amp;#34; url=base_url + token_url response = requests.post(url, headers=headers, auth=HTTPBasicAuth(USER, PASSWORD)) data = response.json() #reusing that bearer token from the repsonse headers = { &amp;#39;Authorization&amp;#39;: f&amp;#34;Bearer {data[&amp;#39;token&amp;#39;]}&amp;#34;, &amp;#39;Content-Type&amp;#39;: &amp;#39;application/json&amp;#39;, &amp;#39;Accept&amp;#39;: &amp;#39;application/json&amp;#39; } url=&amp;#34;/something/&amp;#34; response=requests.</description>
    </item>
    
    <item>
      <title>python nested dictionary access</title>
      <link>https://ridingintraffic.github.io/posts/2023-04-27-python-nesting/</link>
      <pubDate>Thu, 27 Apr 2023 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2023-04-27-python-nesting/</guid>
      <description>Getting dictionaries back from a http endpoint usually results in a mess of objects. Dealing with this in python can be a challenge of ValueError exceptions. so what is the easiest way to handle this? a nested get. if the object looks like
message={&amp;#34;detail&amp;#34;:{&amp;#34;operation&amp;#34;:&amp;#34;create&amp;#34;}} then you can access it like this
message.get(&amp;#39;detail&amp;#39;, {}).get(&amp;#39;operation&amp;#39;) then if you access something that doesn&amp;rsquo;t exist you will get a nice None back
&amp;gt;&amp;gt;&amp;gt; print(message.get(&amp;#39;detail&amp;#39;, {}).</description>
    </item>
    
    <item>
      <title>git single file</title>
      <link>https://ridingintraffic.github.io/posts/2023-03-03-single-file-git/</link>
      <pubDate>Fri, 03 Mar 2023 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2023-03-03-single-file-git/</guid>
      <description>Sometimes you just need a single file from a git repo. I know that this is not the typical way we use git, but sometimes you just need to do a thing.
So I want a single file, how do i do that?
git archive --format=tar --remote=ssh://git@github.com:someuser/somefile.git{main} -- my_file_name |tar xf - and like that you can snag one file from one repo and get on with your life.</description>
    </item>
    
    <item>
      <title>macos text entering weirdness</title>
      <link>https://ridingintraffic.github.io/posts/2023-02-09-hold-for-accent/</link>
      <pubDate>Thu, 09 Feb 2023 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2023-02-09-hold-for-accent/</guid>
      <description>Just another basic reminder for a thing that I fixed with my laptop when it was acting odd and weird;
I was working on my mac and I kept encouring a weird behavior where certain keys that were held down would not repeat, but would pop up a prompt on my screen to enter some kind of special accented internantionl character.
In macOS, when a key is held down while entering text, a popup is shown which lets one choose between various accented forms of the character.</description>
    </item>
    
    <item>
      <title>wireless zmk mac sleep waking bug</title>
      <link>https://ridingintraffic.github.io/posts/2023-02-01-zmk-mac-power/</link>
      <pubDate>Wed, 01 Feb 2023 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2023-02-01-zmk-mac-power/</guid>
      <description>bug in zmk fancy keyboards use a controller called a nice nano, that nice nano runs a firmware called zmk. That firmware has a fair few options to configure a few things.
One of the nice options is deep sleep, which powers things down to save battery on the board when not in use. Many people argue that this feature eliminates the need for a physical battery switch. However there is a bug with mac that is/was waking up the mac from sleep eventhough the &amp;ldquo;keyboard is alseep&amp;rdquo; You can fix it with.</description>
    </item>
    
    <item>
      <title>fun with cloudwatch logs</title>
      <link>https://ridingintraffic.github.io/posts/2023-01-31-cloudwatch-logs/</link>
      <pubDate>Tue, 31 Jan 2023 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2023-01-31-cloudwatch-logs/</guid>
      <description>writing directly to cloudwatch logs sometimes you just need to write to a cloudwatch log and you want to do that from the terminal? You can do this with jq bash and aws cli yey
timestamp=$(date +%s000); \ json_data=$(jq --null-input --arg timestamp $timestamp &amp;#39;{&amp;#34;timestamp&amp;#34;: ($timestamp|tonumber), &amp;#34;message&amp;#34;: &amp;#34;ssn: 123-12-1234&amp;#34;}&amp;#39;); \ aws logs put-log-events --log-group-name /dev/ridigintraffic --log-stream-name something-special --log-events &amp;#34;$json_data&amp;#34; </description>
    </item>
    
    <item>
      <title>vertical keyboards</title>
      <link>https://ridingintraffic.github.io/posts/2023-01-17-vertical-keyboard/</link>
      <pubDate>Tue, 17 Jan 2023 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2023-01-17-vertical-keyboard/</guid>
      <description>i mesed up my back over the weekend i spent a couple of days on the floor. This was because i messed up my back. This is mostly becuase I have really poor posture. I have had really poor posture for a good 35 years now. It is likley that the poor posture is finally catching up to me. So what do we do when bad things like this happen? We make a whole bunch of changes to things and then revert a number of those changes but hopefully one or two of those changes will stick.</description>
    </item>
    
    <item>
      <title>open a folder from terminal</title>
      <link>https://ridingintraffic.github.io/posts/2022-10-07-open-folder-terminal/</link>
      <pubDate>Fri, 07 Oct 2022 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2022-10-07-open-folder-terminal/</guid>
      <description>open a finder in the terminal of a mac if you need to open a finder window you can just type open or if you want to open the finder with the folder that you are in as the path you can type open . and like that you have magically opened the folder and you are good to go.</description>
    </item>
    
    <item>
      <title>muting a microwave</title>
      <link>https://ridingintraffic.github.io/posts/2022-09-12-muting-a-microware/</link>
      <pubDate>Mon, 12 Sep 2022 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2022-09-12-muting-a-microware/</guid>
      <description>Microware muting Ok fine usually I will talk about tech things and IT things, but this is a quality of life thing. It turns out that you can mute your microwave. While i never thought that this would be a thing, it does make really good sense and yea, that should be a thing. 30 seconds later I googled &amp;ldquo;mute microwave&amp;rdquo; and low and behold.
whirlpool microwave: keypad mute: press and hold 1 for 3 seconds hear &amp;#34;beep beep&amp;#34; end of cycle mute: pread and hold 2 for 3 seconds hear &amp;#34;beep beep&amp;#34; </description>
    </item>
    
    <item>
      <title>ripgrep file context</title>
      <link>https://ridingintraffic.github.io/posts/2022-09-06-ripgrep-filename-context-search/</link>
      <pubDate>Tue, 06 Sep 2022 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2022-09-06-ripgrep-filename-context-search/</guid>
      <description>rip grep tip I use ripgrep all the time and often times there are little things that can really help you find what you are serarching for. This is one of them.
I want to find a string in a specific filename that exists in many folders. Then I want to display those resutls with some context.
rg &amp;#39;.wait:&amp;#39; -g &amp;#39;.gitlab-ci.yml&amp;#39; --context 5 The string that I am searching for is .</description>
    </item>
    
    <item>
      <title>replacing text across files</title>
      <link>https://ridingintraffic.github.io/posts/2022-05-26-replacing-text-blocks/</link>
      <pubDate>Sun, 07 Aug 2022 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2022-05-26-replacing-text-blocks/</guid>
      <description>We built microservices to leverage scale. As a result those microservices are each in their own repos. We don&amp;rsquo;t need to get into a discussion about mono repos here, we aren&amp;rsquo;t using them. The example here is a gitlab pipeline file and we needed to add a new yaml anchor block to use later in the pipeline. We are going to look for something that we know exists, in this case: &amp;ldquo;.</description>
    </item>
    
    <item>
      <title>github vscode</title>
      <link>https://ridingintraffic.github.io/posts/2022-04-27-vscode-github/</link>
      <pubDate>Wed, 27 Apr 2022 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2022-04-27-vscode-github/</guid>
      <description>Github and gitlab both have online text editors. if you are in safari and you have a repo open for either of them. All you need to do is type the period key and they will pop full fledged web editors for you. with github you are actually getting vscode with gitlab you are getting their editor. this makes me miss github for my daily work environment. but i guess there is a gitlab plugin for vscode in the web.</description>
    </item>
    
    <item>
      <title>adding &lt;vs&gt;code to path</title>
      <link>https://ridingintraffic.github.io/posts/2022-03-14-vscode/</link>
      <pubDate>Mon, 14 Mar 2022 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2022-03-14-vscode/</guid>
      <description>Adding code . to your terminal in order to open vscode. I like to maintain a terminal session running with just about everything that I am working on in it. Usually I work in VIM but lately I have needed to use vscode for a number of things. I like being ale to clone or switch the repo I am working on from the terminal and then open an editor directly from there.</description>
    </item>
    
    <item>
      <title>python repl</title>
      <link>https://ridingintraffic.github.io/posts/2021-09-16-repl/</link>
      <pubDate>Thu, 16 Sep 2021 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2021-09-16-repl/</guid>
      <description>Using repl to debug python.
https://jvns.ca/blog/2021/09/16/debugging-in-a-repl-is-fun/
what’s a REPL? REPL stands for “read eval print loop”. A REPL is a program that: reads some input from you like print(f&amp;#34;2 + 2 = {2+2}&amp;#34;) (read) evaluates the input (eval) print out the result (print) and then goes back to step 1 (loop) A couple years ago I used pry in ruby/chef a bunch and then I guess I forgot about it. Now this works for python too and it is WAY better than my print statement hell that I usually write.</description>
    </item>
    
    <item>
      <title>git-diff</title>
      <link>https://ridingintraffic.github.io/posts/2021-05-26-git-diff/</link>
      <pubDate>Wed, 26 May 2021 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2021-05-26-git-diff/</guid>
      <description>Diffing with git Diffing with git is hard so I wrote an alias in order to make my life easier.
alias git-diff-master=&amp;#39;git diff master...`git rev-parse --abbrev-ref HEAD`&amp;#39; Run that little alias and you are good to go when you need to check what you have changed.
bye</description>
    </item>
    
    <item>
      <title>vim-jq</title>
      <link>https://ridingintraffic.github.io/posts/2021-01-19-vim-jq/</link>
      <pubDate>Tue, 19 Jan 2021 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2021-01-19-vim-jq/</guid>
      <description>Format json in vim If you have jq installed then all you need to do, to pretty print json is.
:%!jq &amp;#39;.&amp;#39; Bam pretty json in vim</description>
    </item>
    
    <item>
      <title>keybase gpg signing</title>
      <link>https://ridingintraffic.github.io/posts/2020-11-17-keybase-gpg-signing/</link>
      <pubDate>Tue, 17 Nov 2020 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2020-11-17-keybase-gpg-signing/</guid>
      <description>I am borrowing this from pstadler because it is really good https://github.com/pstadler/keybase-gpg-github/blob/master/README.md
Set up Keybase.io, GPG &amp;amp; Git to sign commits on GitHub This is a step-by-step guide on how to create a GPG key on keybase.io, adding it to a local GPG setup and use it with Git and GitHub.
Although this guide was written for macOS, most commands should work in other operating systems as well.
There&amp;rsquo;s a video published by Timothy Miller explaining some parts of this guide.</description>
    </item>
    
    <item>
      <title>bfg -delete</title>
      <link>https://ridingintraffic.github.io/posts/2020-11-12-bfg-delete-files/</link>
      <pubDate>Thu, 12 Nov 2020 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2020-11-12-bfg-delete-files/</guid>
      <description>Help! I committed and pushed something dangerous to github This happens we are not perfect and from time to time mistakes are made. Thats ok we can fix it with bfg
git add my-bad-file git commit -a -m &amp;#34;im dumb&amp;#34; git push origin master # I did not mean to do that, I did not mean to do that # Lets fix it # i am in the repo folder named my-repo rm my-bad-file git commit -a -m &amp;#34;go away&amp;#34; git push origin master cd .</description>
    </item>
    
    <item>
      <title>terraform destroy gpg pinentry</title>
      <link>https://ridingintraffic.github.io/posts/2020-11-11-tf-pinentry-gpg/</link>
      <pubDate>Wed, 11 Nov 2020 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2020-11-11-tf-pinentry-gpg/</guid>
      <description>pinentry is broken on my mac?! try this first
# Kill gpg-agent killall gpg-agent # Run gpg-agent in daemon mode gpg-agent --daemon Universal handoff - clipboard mac/IOS There is a feature in mac land that allows you to share clipboard between phone and computer if they are both on the same wifi along with the same apple account. This can be super useful for a variety of applications.
Here&amp;#39;s how to turn on Handoff on your devices: On your Mac: Choose Apple () menu &amp;gt; System Preferences, then click General.</description>
    </item>
    
    <item>
      <title>aws cli input and TF state file</title>
      <link>https://ridingintraffic.github.io/posts/2020-10-09-aws-terraform/</link>
      <pubDate>Fri, 09 Oct 2020 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2020-10-09-aws-terraform/</guid>
      <description>AWS cli v2 input prompting Today I learned that there is an argument that you can pass to the aws cli and it will prompt you for the input for the command that you are trying to run. https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-parameters-prompting.html
If you are using version 2 of the aws cli then just add --cli-auto-prompt to your command and it will make magic.
This is good if you don&amp;rsquo;t recall what you need to have in a command so it will just ask you along the way.</description>
    </item>
    
    <item>
      <title>Clojure 2</title>
      <link>https://ridingintraffic.github.io/posts/2020-06-24-clojure-2/</link>
      <pubDate>Thu, 24 Sep 2020 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2020-06-24-clojure-2/</guid>
      <description>Clojure again Welcome back to my clojure ramblings while I try to understand more.
Tonight we are going to pick up where we left off, and that has to do with Vectors.
NOTE: I am writing this as a way to digest and understand the book that I am working through entitled. Living Clojure
Vectors Vectors can be found because they are wrapped in []
user=&amp;gt; [ :bucket 3 4 :cup ] [:bucket 3 4 :cup] user=&amp;gt; [:thing &amp;#34;other&amp;#34; :mine] [:thing &amp;#34;other&amp;#34; :mine] Vectors are similar to lists we can have a mix of types in them, and some of the same operators can be used on them.</description>
    </item>
    
    <item>
      <title>uni headsetcontrol</title>
      <link>https://ridingintraffic.github.io/posts/2020-09-21-uni/</link>
      <pubDate>Mon, 21 Sep 2020 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2020-09-21-uni/</guid>
      <description>UNI there is a handy little thing written in go that can handle unicode lookups from the terminal. I like all things terminal so here it is.
https://github.com/arp242/uni
go get arp242.net/uni
Which will then allow you to search unicode from the terminal nice and easy uni search unicorn
headset control I use an arctis 7 for my work headset, it is pretty nice but since it is USB 2.4ghz it lacks some of the features up bluetooth.</description>
    </item>
    
    <item>
      <title>BBQ</title>
      <link>https://ridingintraffic.github.io/posts/2020-09-18-bbq/</link>
      <pubDate>Fri, 18 Sep 2020 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2020-09-18-bbq/</guid>
      <description>just some thoughts on places to eat in the future There are tons of good places to get bbq in chicago, but here are some top winners
https://chicagoculinarykitchen.com/ bbq in the burbs is chicago culinary kitchen located at 773 N. Quentin Road Palatine, IL
Food truck / small shop that makes meat and then closes up shop when they run out of it.</description>
    </item>
    
    <item>
      <title>Terraform external</title>
      <link>https://ridingintraffic.github.io/posts/2020-07-08-terraform-external/</link>
      <pubDate>Wed, 08 Jul 2020 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2020-07-08-terraform-external/</guid>
      <description>Fun with terraform Today there was a fun problem. We needed to have terraform interrogate the current state and then make a decision based on the current state. The use case specifically was the number of service instances on an ECS cluster. If every time a deployment were to happen we would reset the desired count back to the original, then we could lose track of the current number of instances that happened as a result of scaling actions taken based on the current load.</description>
    </item>
    
    <item>
      <title>Clojure 3</title>
      <link>https://ridingintraffic.github.io/posts/2020-06-27-clojure-3/</link>
      <pubDate>Sat, 27 Jun 2020 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2020-06-27-clojure-3/</guid>
      <description>More Clojure Welcome back again. Last time we ended with assoc and dissoc. Tonight we will start with Sets.
NOTE: I am writing this as a way to digest and understand the book that I am working through entitled. Living Clojure
Sets What is a set? Sets are collections without duplicates and can be denoted with #{} Because of the nature of the set, we get a few extra methods to use on them, union difference and intersection.</description>
    </item>
    
    <item>
      <title>Clipboard</title>
      <link>https://ridingintraffic.github.io/posts/2020-06-24-clipboard/</link>
      <pubDate>Wed, 24 Jun 2020 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2020-06-24-clipboard/</guid>
      <description>Iterm Clipboard Apparently there has been an option sitting in iTerm that will allow applications in the terminal to access the system clipboard and somehow I never knew about this?!? Inside the preferences-General menu there is a setting called &amp;ldquo;Selection&amp;rdquo; and then an option &amp;ldquo;Applications in terminal may access clipboard&amp;rdquo; This is life changing and certainly makes a great many things much much easier https://stackoverflow.com/a/38849483</description>
    </item>
    
    <item>
      <title>Clojure 1</title>
      <link>https://ridingintraffic.github.io/posts/2020-06-23-clojure-1/</link>
      <pubDate>Tue, 23 Jun 2020 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2020-06-23-clojure-1/</guid>
      <description>Clojure I am trying to learn clojure, therefore the best way that I know how to learn something is to write about it. This allows me to digest the things that I am learning. Apparently I had forgotten about this tactic for the past couple weeks, as I was trying to just read and do problems to help learn this. Therefore lets get started.
NOTE: I am writing this as a way to digest and understand the book that I am working through entitled.</description>
    </item>
    
    <item>
      <title>playing with ssm</title>
      <link>https://ridingintraffic.github.io/posts/2020-05-08-ssm-scraping/</link>
      <pubDate>Fri, 08 May 2020 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2020-05-08-ssm-scraping/</guid>
      <description>ssm rate limiting I was spending a little bit of time trying to scrape some ssm stuff and i figured out that there seems to be a &amp;ldquo;feature&amp;rdquo; built in to ssm that doesn&amp;rsquo;t let you do too many describes. AWS will complain and say NO BUENO if you do it to often.
aws ssm describe-parameters | jq &amp;#39;.Parameters[]| &amp;#34;\(.Name) \(.Type)&amp;#34;&amp;#39; An error occurred (ThrottlingException) when calling the DescribeParameters operation (reached max retries: 2): Rate exceeded I thought that was kind of a nice thing to stop people from describe everythign too often.</description>
    </item>
    
    <item>
      <title>unique .gitconfig</title>
      <link>https://ridingintraffic.github.io/posts/2020-04-30-unique-gitconfig/</link>
      <pubDate>Thu, 30 Apr 2020 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2020-04-30-unique-gitconfig/</guid>
      <description>using multiple .gitconfig There is a neat feature in .gitconfig that will allow you to use uniueq gitconfig depending on the folder structure that you have.
For example add this to your global gitconfig: This is assuming that ~/github has one org of repos, and ~/git has another, much lke personal and corporate git repos
[includeIf &amp;#34;gitdir:~/git/&amp;#34;] path = ~/git/.gitconfig [includeIf &amp;#34;gitdir:~/github/&amp;#34;] path = ~/github/.gitconfig Then if you add this is the correpsonding location, the user name/email will be different in each folder structure.</description>
    </item>
    
    <item>
      <title>bfg clean local</title>
      <link>https://ridingintraffic.github.io/posts/2020-02-28-bfg-local-cleanup/</link>
      <pubDate>Sat, 28 Mar 2020 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2020-02-28-bfg-local-cleanup/</guid>
      <description>BFG local cleanup This is a thing that you can do to clean up your local git repo AFTER doing a commit and before pushing to origin.
PREWORK Download BFG.jar https://rtyley.github.io/bfg-repo-cleaner/ https://repo1.maven.org/maven2/com/madgag/bfg/1.13.0/bfg-1.13.0.jar Create directory structure mkdir -p ~/.binaries/ Move BFG into place, chmod it
mv bfg-1.13.0.jar ~/.binaries/ &amp;amp;&amp;amp; chmod 777 ~/.binaries/bfg-1.13.0.jar setup BASH_PROFILE echo &amp;#39;alias bfg=&amp;#34;java -jar ~/.binaries/bfg-1.13.0.jar&amp;#34;&amp;#39; &amp;gt;&amp;gt; ~/.bash_profile echo &amp;#34;export PATH=/Users/$(whoami)/.binaries:$PATH&amp;#34; &amp;gt;&amp;gt; ~/.bash_profile source it source ~/.bash_profile Cleaning repo with BFG Now what do we do.</description>
    </item>
    
    <item>
      <title>live dangerously</title>
      <link>https://ridingintraffic.github.io/posts/2020-03-18-live-dangerously/</link>
      <pubDate>Wed, 18 Mar 2020 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2020-03-18-live-dangerously/</guid>
      <description>Turn off signed aps in mac I don&amp;rsquo;t want the security warning for unsigned apps. You can do this with this command on a mac.
sudo spctl --master-disable
This is terrible and prolly shouldn&amp;rsquo;t be done, but you know sometimes you need to.
You can also yank things out of quarantine with this
xattr -r -d com.apple.quarantine /path/to/dir</description>
    </item>
    
    <item>
      <title>aws encrypted keys</title>
      <link>https://ridingintraffic.github.io/posts/2020-03-04-aws-encrypted-keys/</link>
      <pubDate>Wed, 04 Mar 2020 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2020-03-04-aws-encrypted-keys/</guid>
      <description>AWS credential_process There is a setting in the aws config that allows AWS to source the credentials externally. This can be super handy if you don&amp;rsquo;t want to store those as plain text things.
It is called &amp;ldquo;credential process&amp;rdquo;. We can use this in conjunction with native openssl to give you a poor mans encrypted aws keys.
https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-sourcing-external.html
First we will take the aws credentials and dump them to a temp file this is named key.</description>
    </item>
    
    <item>
      <title>virtualbox shared clipboard and ripgrep install</title>
      <link>https://ridingintraffic.github.io/posts/2018-11-30-virtualbox-shared-clipboard_ripgrep-install/</link>
      <pubDate>Fri, 30 Nov 2018 00:00:00 -0500</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2018-11-30-virtualbox-shared-clipboard_ripgrep-install/</guid>
      <description>Virtualbox shared clipboard When using virtualbox it is pretty important that you are going to want to have a shared clipboard between your machine and the vm. This can be done for linux/kali linux by doing the following.
Start VirtualBox. Start the host in question. Once the host has booted, click Devices | Insert Guest Additions CD Image. Open up a terminal window in the guest. Mount the CD-ROM with the command sudo mount /dev/cdrom /mnt.</description>
    </item>
    
    <item>
      <title>pihole and luks update</title>
      <link>https://ridingintraffic.github.io/posts/2018-11-28-pihole-and-luks-update/</link>
      <pubDate>Wed, 28 Nov 2018 08:08:50 -0400</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2018-11-28-pihole-and-luks-update/</guid>
      <description>pi-hole Well i had tried to use pi-hole before and it failed horribly. Tonight on the other hand, I just wiped a pi and installed an sdcard, ran a simple script and all the magic was done for me&amp;hellip; So I guess I might have to use this after all&amp;hellip;. I am also going to do some research on automating the maintaince of it to make sure the block lists are also up to date and whatnot.</description>
    </item>
    
    <item>
      <title>fun with rsync</title>
      <link>https://ridingintraffic.github.io/posts/2018-11-26-fun-with-rsync/</link>
      <pubDate>Mon, 26 Nov 2018 08:08:50 -0400</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2018-11-26-fun-with-rsync/</guid>
      <description>fun with rsync Sometimes you jsut gotta back up files as clones, to another location. On a mac you have access to rsync and it is avaialbe in homebrew. brew install rsync wait for completion and then you are good to go. Alright so how about some commands..
copy from local to usb rsync -av /Users/$(whoami)/Documents/ /Volumes/1tb/backup/
copy from nas to usb rsync -av /Volumes/files/data/ /Volumes/1tb/backup/
mac will mount nas shares in the share name and then in volumes, so this is reliant on that mount being present when you want to pull something down from said nas.</description>
    </item>
    
    <item>
      <title>book list, chaos engineering and docker with python</title>
      <link>https://ridingintraffic.github.io/posts/2018-11-21-book-list_chaos-engineering_docker-python/</link>
      <pubDate>Wed, 21 Nov 2018 08:08:50 -0400</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2018-11-21-book-list_chaos-engineering_docker-python/</guid>
      <description>books Everyone like to read things right? well I came across this list from palo alto earlier and it looks pretty promising. cybercanon.paloaltonetworks There area whole bunch of books in there raning from security to chaos engineering. Down the chaos engineering rabbit hole we go checkout this list of chaos engineering everything here awesome-chaos-engineering
what is chaos engineering? It is using the ideas that the systems that we create now are so complex and dense.</description>
    </item>
    
    <item>
      <title>hashcat with nvidia fans</title>
      <link>https://ridingintraffic.github.io/posts/2018-11-15-nvidia-fancontrol/</link>
      <pubDate>Thu, 15 Nov 2018 08:08:50 -0400</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2018-11-15-nvidia-fancontrol/</guid>
      <description>nvidia fan settings Nvida gpu cards have firmware regulators in place that are OK with the cards running at 85c when they are under load. This is designed because of the assumption that the cards will only ever be under that kind of load for a short period. However when you want to run gpu&amp;rsquo;s at 100% utilization for an extended period it is often better to run these cards colder.</description>
    </item>
    
    <item>
      <title>hashcat cracking luks</title>
      <link>https://ridingintraffic.github.io/posts/2018-11-14-luks-hashcat/</link>
      <pubDate>Wed, 14 Nov 2018 08:08:50 -0400</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2018-11-14-luks-hashcat/</guid>
      <description>luks encryption lets create an encrypted container and toss some data in it&amp;hellip;
$ dd if=/dev/urandom of=test bs=1M count=100 $ cryptsetup luksFormat test #use password password $ cryptsetup luksOpen test tmp $ xxd -l 512 /dev/mapper/tmp # is random data at this point $ mkfs.ext4 /dev/mapper/tmp # use the same file system that is used by your system/device $ xxd -l 512 /dev/mapper/tmp # should no longer be random data $ cryptsetup luksClose tmp After it is created if we wanted to crack it with hashcat then we would just need to grab some header data and run it though</description>
    </item>
    
    <item>
      <title>2018-08-28_Synology_Time_Machine</title>
      <link>https://ridingintraffic.github.io/posts/2018-08-28-time-machine-nas/</link>
      <pubDate>Tue, 28 Aug 2018 08:10:50 -0400</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2018-08-28-time-machine-nas/</guid>
      <description>Synology time machine &amp;ldquo;How_to_back_up_files_from_Mac_to_Synology_NAS_with_Time_Machine.
This will let you p[lug in a usb drive to a synolgoy nas and then from there configure an AFP share that mac&amp;rsquo;s time machine software will find and then allow network backups. It is still on site so it isn&amp;rsquo;t totally secure and reliable. But it is a pretty good use of a 2tb drive and a NAS. The initial backup is kind of brutal but then anything after that should be a bit better and faster.</description>
    </item>
    
    <item>
      <title>2018_07_31_python_webserver</title>
      <link>https://ridingintraffic.github.io/posts/2018-07-31-python-websever/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2018-07-31-python-websever/</guid>
      <description>python http server simple startup of a python webserver for mac in your local directory:
python2: python -m SimpleHTTPServer
python3 with cgi: python -m http.server --cgi
python3 normal: python3 -m http.server
i mean what can go wrong here really?!?
source: start-web-server-python-3</description>
    </item>
    
    <item>
      <title>2018_08_01_aws_cli_bundled_install</title>
      <link>https://ridingintraffic.github.io/posts/2018-08-01-aws_cli_bundled_install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2018-08-01-aws_cli_bundled_install/</guid>
      <description>quick and dirty install of the aws cli sometimes you need to install the aws cli and you just need to get it done. I often use this when I am doing a bash install of it, for some kind of automation.
#download it $ curl &amp;#34;https://s3.amazonaws.com/aws-cli/awscli-bundle.zip&amp;#34; -o &amp;#34;awscli-bundle.zip&amp;#34; #unzip it $ unzip awscli-bundle.zip #run it $ sudo ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws #if you dont have root you can run it here $ .</description>
    </item>
    
    <item>
      <title>2018_08_02_mac_key_repeat_python_ping</title>
      <link>https://ridingintraffic.github.io/posts/2018-08-02-key_repeat_macos_python_ping/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2018-08-02-key_repeat_macos_python_ping/</guid>
      <description>setting up mac keyboards key repeat with a new laptop means that you need to make all the changes to all the things. One of the annoyances that I had was the key repeat. Yes you can change this in the gui but why would I want to do it there when I can do it in the terminal instead&amp;hellip;
# read what everything is set at $ defaults read -g InitialKeyRepeat $ defaults read -g KeyRepeat # write some new values to the things.</description>
    </item>
    
    <item>
      <title>bagel sandwich the easy way</title>
      <link>https://ridingintraffic.github.io/posts/2022-05-24-bagel-sandwich-the-easy-way/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2022-05-24-bagel-sandwich-the-easy-way/</guid>
      <description>I love bagel and egg sandwiches and they are super easy to make with almost no cleanup.
Bagel and egg sandwich the easy way(almost NO cleanup):
as learned from watching a local bagel shop do it for a couple years. heat pan i think its a 12 or 16&amp;quot;, melt butter/oil to coat even nonstick pan while pan is heating take bowl, crack two eggs and whip them together - add whatever spices you want, I usually add nothing once pan is sizzling (if you toss a drop of water in it it sizzles) pour in bowl of eggs toast bagel let cook until it is just about no longer runny, take a decently big spatula fold egg in half, and then fold into quarter, press down, cook one side until it is done enough for you then flip.</description>
    </item>
    
    <item>
      <title>certs</title>
      <link>https://ridingintraffic.github.io/posts/2019-02-12-certs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2019-02-12-certs/</guid>
      <description>self signed certs Genning certs is always a pita, luckily I found a quick and easy way from the folks over at spiderlabs, to do it.. gen-self-signed-cert.sh
#!/bin/bash openssl genrsa -out my.key 2048 openssl req -new -x509 -days 3650 -key my.key -out my.crt -subj &amp;#34;/&amp;#34; </description>
    </item>
    
    <item>
      <title>curl redirects</title>
      <link>https://ridingintraffic.github.io/posts/2019-05-01-curl-redirects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2019-05-01-curl-redirects/</guid>
      <description>curl redirects Sometimes you want to be able to follow a redirect chain to see what is going on. you can do that pretty easily with curl. Toss in your url and hit enter then follow the breadcrumbs.
curl -v -L http://google.com 2&amp;gt;&amp;amp;1 | egrep &amp;#34;^&amp;gt; (Host:|GET)&amp;#34; $ curl -v -L http://google.com 2&amp;gt;&amp;amp;1 | egrep &amp;#34;^&amp;gt; (Host:|GET)&amp;#34; &amp;gt; GET http://google.com/ HTTP/1.1 &amp;gt; Host: google.com &amp;gt; GET http://www.google.com/ HTTP/1.1 &amp;gt; Host: www.</description>
    </item>
    
    <item>
      <title>github one liner and powershell curl</title>
      <link>https://ridingintraffic.github.io/posts/2019-04-09-github-one-liner/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2019-04-09-github-one-liner/</guid>
      <description>Github releases There is a nice way to get the latest release from a github repo. as long as it gets tagged as release. I like to be able to pull down the latest version of a release for specific code in automated builds. This helps that.
Use curl to get the JSON response for the latest release Use grep to find the line containing file URL Use cut and tr to extract the URL Use wget to download it</description>
    </item>
    
    <item>
      <title>keeping secrets out of git</title>
      <link>https://ridingintraffic.github.io/posts/2019-01-02-git-secrets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2019-01-02-git-secrets/</guid>
      <description>git-secrets I came across this handy piece of software today, called git-secrets. It is made by awslabs and it acts as a git-hook that will stop you form doing stupid things. https://github.com/awslabs/git-secrets</description>
    </item>
    
    <item>
      <title>qmk-animations</title>
      <link>https://ridingintraffic.github.io/posts/2021-07-12/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2021-07-12/</guid>
      <description>#QMK animation Having a keyboard with an oled screen means that you can add things to it. This cute little bongo cat animations or other things.
This lets you create all sorts of animations https://githubmemory.com/repo/AskMeAboutBirds/qmk-oled-animation-compressor</description>
    </item>
    
    <item>
      <title>sql server terminal</title>
      <link>https://ridingintraffic.github.io/posts/2019-04-22-sql-server-terminal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2019-04-22-sql-server-terminal/</guid>
      <description>sql server I needed to connect to a sql db this morning and I didn&amp;rsquo;t have a client. Docker to the rescue! docker run -it mysql /bin/bash mysql -u &amp;lt;myuser&amp;gt; -p -h &amp;lt;myhost&amp;gt; &amp;lt;mydatabase&amp;gt; and done. when using the -p flag it will prompt you for the password instead of having it in the terminal. Simple easy and connected.</description>
    </item>
    
    <item>
      <title>sudo make me a sandwich</title>
      <link>https://ridingintraffic.github.io/posts/2018-12-05-sudo-make-me-a-sandwich/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2018-12-05-sudo-make-me-a-sandwich/</guid>
      <description>sudo make me a sandwich, then I&amp;rsquo;ll pwn your fridge Sudo is a program for Unix-like computer operating systems that allows users to run programs with the security privileges of another user. wikipedia-sudo
Let’s say that we have a folder named /luggage/. The luggage is carrying some incredibly valuable things. Rincewind and twoflower are two users who have been traveling with this luggage for sometime. Because, rincewind doesn&amp;rsquo;t want twoflower to read the octavo, but is fine if he looks at the camera, both which are located in the in the luggage.</description>
    </item>
    
    <item>
      <title>using netcat as a portscanner</title>
      <link>https://ridingintraffic.github.io/posts/2018-12-11-netcat-portscanner/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ridingintraffic.github.io/posts/2018-12-11-netcat-portscanner/</guid>
      <description>netcat netcat can work like a portscanner. If it is the only tool that you have you make do. this is going to scan localhost across all of the ports
nc -zv 127.0.0.1 1-65535 </description>
    </item>
    
  </channel>
</rss>
